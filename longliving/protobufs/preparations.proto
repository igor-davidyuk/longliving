syntax = "proto3";

message NodeInfo {
    string name = 1;
    string adress = 2;
    bool cuda_available = 3;
    uint32 memory_size = 4;
}

message ShardInfo {
    NodeInfo node_info = 1;
    string shard_description = 2;
    uint64 n_samples = 3;
    // We just pass numpy shapes
    uint32 sample_shape = 4;
    uint32 target_shape = 5;
}

message ShardAcknowledgement {
    bool accepted = 1;
}


service FederationDirector {
    rpc AcknowledgeShard (ShardInfo) returns (ShardAcknowledgement) {}
    // Shard owner could also provide some public data for tests
}
